services:
  db:
    image: postgres:13-alpine
    environment:
      POSTGRES_DB: questionnaire
      POSTGRES_USER: questionnaire
      POSTGRES_PASSWORD: questionnaire
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U questionnaire" ]
      interval: 5s
      timeout: 5s
      retries: 5

  web:
    build: .
    command: >
      sh -c "python manage.py wait_for_db && 
      python manage.py collectstatic --noinput && 
      python manage.py migrate && 
      python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
    environment:
      POSTGRES_HOST: db
      POSTGRES_DB: questionnaire
      POSTGRES_USER: questionnaire
      POSTGRES_PASSWORD: questionnaire
      DEBUG: 0
    depends_on:
      db:
        condition: service_healthy

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
    depends_on:
      - web

volumes:
  postgres_data: